name: Common Dynare testsuite workflow

####################
# ONLINE LICENSING #
####################
# 1) Check whether your license allows for cloud and container usage: https://mathworks.com/help/install/license/licensing-for-mathworks-products-running-on-the-cloud.html
# 2) Run the Dynare (or MATLAB base) container with the following command:
#    docker run --rm -it <image_name> -shell
# 3) Run inside the container: matlab -licmode onlinelicensing
#    This will ask you for your MathWorks Account login information. You may additionally be prompted to select a license.
#    Once you've signed in with your MathWorks Account and MATLAB is ready for a command,
#    exit MATLAB and restart it to check whether the license is still valid.
# 4) If the license is valid, copy the content of file /home/matlab/.matlab/MathWorks/MATLAB/LNUCredentials/LNUCreds.info from the container to your host machine.
# 5) Use base64 to encode the file into a Base64 string: base64 -i LNUCreds.info -o LNUCreds.info.base64 as described here https://docs.github.com/en/actions/security-guides/encrypted-secrets#storing-base64-binary-blobs-as-secrets
# 6) Copy the content of LNUCreds.info.base64 and paste it as a Github secret named LNUCREDS_INFO_BASE64.
  
##############################
# LICENSE FILE (UNTIL R2023a)#
##############################
# You need to provide a valid license to the container (the different options are described here: https://de.mathworks.com/help/cloudcenter/ug/matlab-container-on-docker-hub.html).
# This is a recommended way for versions up to R2023a:
# 1) Check whether your license allows for cloud and container usage: https://mathworks.com/help/install/license/licensing-for-mathworks-products-running-on-the-cloud.html
# 2) Generate a license file using MATHWORKS License Center, see Option 2 https://de.mathworks.com/matlabcentral/answers/235126-how-do-i-generate-a-matlab-license-file#answer_190013
#    The host id is the MAC address used below in the env block, make sure that you pass the same MAC address to the docker run command.
#    The user is called matlab.
# 3) Edit the license.lic file with a text editor and remove all the blocks except for MATLAB, Distrib_Computing_Toolbox, GADS_Toolbox, Optimization_Toolbox, Statistics_Toolbox, Symbolic_Toolbox, Control_Toolbox, Econometrics_Toolbox.
# 4) Use base64 to encode the stripped down file into a Base64 string: base64 -i license.lic -o license.lic.base64 as described here https://docs.github.com/en/actions/security-guides/encrypted-secrets#storing-base64-binary-blobs-as-secrets
# 5) Copy the content of license.lic.base64 and paste it as a Github secret named MATLAB_LICENSEFILE_BASE64.

###############
# WORKAROUNDS #
###############
# Dynare 6.0 MATLAB
# - optimizers/fs2000_102: fails to find the data file for some reason (maybe some race condition), so remove the test from the testsuite (lines 788-791 in meson.build) and run the test manually

on:
  workflow_call:
    inputs:
      dynare-version:
        required: true
        type: string
      testsuite:
        required: true
        type: string
    secrets:
      matlab-licensefile-base64:
        required: true
      matlab-LNUCreds-info-base64:
        required: true


jobs:
  testsuite_matlab:
    runs-on: ubuntu-latest
    env:
      DYNARE_VERSION: ${{ inputs.dynare-version }}
      MATLAB_LICENSEFILE_BASE64: ${{ secrets.matlab-licensefile-base64 }}
      LNUCREDS_INFO_BASE64: ${{ secrets.matlab-LNUCreds-info-base64 }}
      MAC_ADDRESS_FOR_LICENSE: "A6-7E-1A-F4-9A-92"
      USERNAME_IN_CONTAINER: "matlab"
      TESTSUITE: ${{ inputs.testsuite }}

    steps:
      - name: Pull Dynare Docker container
        run: docker pull docker.io/dynare/dynare:${{ env.DYNARE_VERSION }}

      - name: Decode base64 MATLAB license file
        run: |
          echo $MATLAB_LICENSEFILE_BASE64 | base64 --decode > ${{ github.workspace }}/license.lic

      - name: Decode base64 MATLAB LNUCreds file
        run: |
          echo $LNUCREDS_INFO_BASE64 | base64 --decode > ${{ github.workspace }}/LNUCreds.info
      
      - name: Prepare artifacts directory
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          chmod -R 777 ${{ github.workspace }}/artifacts

      - name: Run Dynare testsuite in Docker container
        run: |
          docker run --rm \
          --shm-size=512M \
          --mac-address ${{ env.MAC_ADDRESS_FOR_LICENSE }} \
          -v ${{ github.workspace }}/LNUCreds.info:/home/matlab/.matlab/MathWorks/MATLAB/LNUCredentials/LNUCreds.info \
          -v ${{ github.workspace }}/artifacts:/home/matlab/artifacts \
          -e TERM=xterm-256color \
          docker.io/dynare/dynare:${{ env.DYNARE_VERSION }} \
          /bin/bash -c "\
          case '${{ env.DYNARE_VERSION }}' in \
          6.*) \
            cd /home/matlab/dynare && \
            sed -i '788,791d' /home/matlab/dynare/meson.build && matlab -batch 'cd tests/estimation; dynare fs2000 console; cd ../optimizers; dynare fs2000_102 console;' && \
            meson test -C build-${{ env.TESTSUITE }} && \
            cp /home/matlab/dynare/build-${{ env.TESTSUITE }}/meson-logs/testlog.txt /home/matlab/artifacts/;; \
          *) \
            cd /home/matlab/dynare/tests && \
            make check-${{ env.TESTSUITE }} -j4 && \
            if [ \"${{ env.TESTSUITE }}\" = 'matlab' ]; then \
              find . -type f \( -name '*.m.log' -o -name '*.m.trs' -o -name '*.jnl' \) -exec sh -c 'mkdir -p \"/home/matlab/artifacts/\$(dirname {})\"; cp {} \"/home/matlab/artifacts/{}\"' \; && \
              cp run_test_matlab_output.txt /home/matlab/artifacts/; \
            fi && \
            if [ \"${{ env.TESTSUITE }}\" = 'octave' ]; then \
              find . -type f \( -name '*.o.log' -o -name '*.o.trs' -o -name '*.jnl' \) -exec sh -c 'mkdir -p \"/home/matlab/artifacts/\$(dirname {})\"; cp {} \"/home/matlab/artifacts/{}\"' \; && \
              cp run_test_octave_output.txt /home/matlab/artifacts/; \
            fi;; \
          esac"

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dynare-artifacts-${{ env.DYNARE_VERSION }}
          path: ${{ github.workspace }}/artifacts/
